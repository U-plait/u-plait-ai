name: FastAPI CI/CD

on:
  push:
    branches: [ "main", "develop" ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/myproject
  VERSION: ${{ github.sha }}
  CONTAINER_NAME: uplait-ai

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: [ self-hosted, label-1 ]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Deploy container
        run: |
          CONTAINER_NAME=${{ env.CONTAINER_NAME }}
          IMAGE=${{ env.DOCKER_IMAGE }}:latest
          
          # Stop and remove existing container if it exists
          if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
          fi
          
          # Remove old image if it exists
          if [ "$(docker images -q $IMAGE)" ]; then
            docker rmi $IMAGE
          fi
          
          # Run new container
          docker run -d -p 8000:8000 --name $CONTAINER_NAME --restart always $IMAGE
